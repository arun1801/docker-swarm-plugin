<?jelly escape-by-default='false'?>
<j:jelly xmlns:j="jelly:core"
>
    <div class="mdl-card mdl-shadow--2dp node">
        <div class="mdl-card__title">
            <i class="material-icons mdl-list__item-avatar  mdl-badge mdl-badge--overlap"
               data-badge="${node.computerCount}">computer
            </i>
            <div class="mdl-layout-spacer"></div>
            <h2 class="mdl-card__title-text ${node.full?'node-full':'node-empty'} ">
                ${node.name}
                <span>
                    <div id="cpu${node.name}" style="height: 80px;width: 40px;"/>
                </span>
                <span>
                    <div id="memory${node.name}" style="height: 80px;width: 40px;"/>
                </span>
            </h2>
        </div>

        <div class="mdl-card__supporting-text">

            <script defer="true">

                (function() {
                google.charts.setOnLoadCallback(drawMemory);
                google.charts.setOnLoadCallback(drawCpu);
                function drawMemory(){
                var memoryData = google.visualization.arrayToDataTable(${node.memoryUsageJson});

                var memoryChart = new google.visualization.PieChart(document.getElementById('memory${node.name}'));
                memoryChart.draw(memoryData, { title: 'memory',legend:{position:'none'}, colors:['grey','#7F7F7F','red','#004411']});
                }
                function drawCpu(){
                var cpuData = google.visualization.arrayToDataTable(${node.cpuUsageJson});

                var cpuChart = new google.visualization.PieChart(document.getElementById('cpu${node.name}'));
                cpuChart.draw(cpuData, {title:'cpu',legend:{position:'none'}, colors:['grey','red']});
                }
                })()


            </script>

            <ul class="mdl-list">
                <j:forEach items="${node.currentBuilds}" var="build">
                    <li class="mdl-list__item">
                        <span class="mdl-list__item-primary-content">
                            <a href="${build.absoluteUrl}">
                                ${build.fullDisplayName}
                            </a>
                        </span>
                    </li>
                </j:forEach>

                <j:forEach items="${node.unknownRunningTasks}" var="task">
                    <li class="mdl-list__item">
                        <span class="mdl-list__item-primary-content">
                            ${task.serviceID}
                        </span>
                    </li>
                </j:forEach>
            </ul>
        </div>
    </div>
</j:jelly>
